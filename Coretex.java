/* autogenerated by Processing revision 1276 on 2022-06-07 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import processing.serial.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class FinalProject extends PApplet {




Serial myPort, myPort2;
int val, val2;
int x;
int score;
boolean tilt, end, start, run, promo, intro, Intro1, Intro2, tiltleft, tiltright, correctleft, correctright, wrongleft, wrongright, prompter, timer;
//timer
int savedTime;
int totalTime = 5000;
//text
PFont points, prompts, logo, titles;
 
 //animations
 Animation leftanimation, rightanimation; //promoanimation
 //start
 PImage startscreen, introduction, intro1, intro2, intro3, restart;
 
 //PImage [] begin = new Pimage [
 PImage [] left = new PImage [10];
 PImage [] right = new PImage [10];
 //prompts
 PImage [] prompt = new PImage [11];


 public void setup(){
  /* size commented out by preprocessor */;
  background(15);
  println("Available Serial Ports");
  println(Serial.list());
  myPort = new Serial(this, Serial.list()[6], 9600);
  myPort2 = new Serial(this, Serial.list()[7], 9600);

    //booleans//
  run = false;
  start = true;
  intro=false;
  Intro1=false;
  Intro2=false;
   //timer//
   savedTime = millis();
   //text//
   points = loadFont("Sportage-DemoItalic-48.vlw");
   prompts = loadFont("RexliaRg-Regular-36.vlw");
   logo = loadFont("RexliaRg-Regular-96.vlw");
   titles = loadFont("RexliaRg-Regular-36.vlw");
   textFont(points);

   //start//
   startscreen=loadImage("start.JPG");
   introduction=loadImage("intro.JPG");
   restart=loadImage("restartText.jpg");
   intro1=loadImage("intro0.PNG");
   intro2=loadImage("intro1.PNG");
   intro3=loadImage("intro2.PNG");
   prompt[0]=loadImage("prompt0.JPG");
   prompt[1]=loadImage("prompt1.JPG");
   prompt[2]=loadImage("prompt2.JPG");
   prompt[3]=loadImage("prompt3.JPG");
   prompt[4]=loadImage("prompt4.JPG");
   prompt[5]=loadImage("prompt5.JPG");
   prompt[6]=loadImage("prompt6.JPG");
   prompt[7]=loadImage("prompt7.JPG");
   prompt[8]=loadImage("prompt8.JPG");
   prompt[9]=loadImage("prompt9.JPG");
   prompt[10]=loadImage("prompt10.JPG");

  //animations//
  leftanimation=new Animation("left", 10);
  rightanimation=new Animation("right", 10);
  
  //promo

  //workout
  
}

 public void draw(){
  //timer//
  int passedTime = millis()-savedTime;
  
  if (myPort.available() > 0) //or change to while
  {  // If data is available,
  val = myPort.read();        // read info and store it in val
  println(val); //print it out in the console } 
  if(val2==1){
    tiltleft = true;}
    else{
    tiltleft = false;}}
  if (myPort2.available()>0){
  val2=myPort2.read();
  println(val2);
  if(val==2){
  tiltright=true;}
  else{
    tiltright=false;}}

    
  //start screen
  if(start==true){
  textFont(logo);
 image(startscreen, 0 , 0);
  text("CORETEX",250,160);
  textFont(prompts);
text("COGNITIVE EMPATHY", 1090,200);
text("EMOTION SHARING", 1098, 350);
text("EMPATHIC CONCERN",1090,500);
textFont(titles);
text("LIFT YOUR LEFT WEIGHT TO BEGIN", 1030, 236);
text("(COMING SOON)",1120,386);
text("(COMING SOON)",1120,536);}
  
  //promo
  if(start==true && tiltleft==true && tiltright==false && passedTime>3000){ //turn into tilt left
    intro=true;
    start=false;
    }
    if(intro==true){
    image(introduction,0,0);
    image(intro1, 800,300);}
    if(intro==true && tiltright==true && tiltleft==false && passedTime>3000){ //change to if tilt right
    image(introduction,0,0);
    Intro1=true;
    intro=false;
    image(intro2,800,300);}
    if(Intro1==true && tiltleft==true && tiltright==false && passedTime>3000){ //change to tilt left
    image(introduction,0,0);
    Intro2=true;
    Intro1=false;
    image(intro3,800,300);}
    if(Intro2==true && tiltright==true && tiltleft==true && passedTime>3000){ //turn into tilt right AND tilt left
    run=true;
    Intro2=false;}
   

    
    if(run==true){
      image(prompt[x],0,0);
      
      if(x%2==0 && tiltleft==true && tiltright==false){ 
      correctleft=true;
      }
      if(correctleft==true && passedTime>3000){
      score=score+1;
      x=x+1;
      passedTime=passedTime-millis();
      timer=true;
      savedTime=millis();
      }
      if(tiltleft==false){
      correctleft=false;
      run=true;}
      if(correctleft==true){
      frameRate(15);
      leftanimation.run(0,0);
      textFont(points);
      text("Empathy Gains:", 455,710);
      text(score, 905,710);}
      
     
      if(x%2!=0 && tiltright==true && tiltleft==false){ 
      correctright=true;
      }
      if(correctright==true && passedTime>3000){
      score=score+1;
      x=x+1;
      passedTime=passedTime-millis();
      timer=true;
      savedTime=millis();}
      if(correctright==true){
      frameRate(15);
      rightanimation.run(0,0);
      textFont(points);
      text("Empathy Gains:", 455,710);
      text(score, 905,710);}
      if(tiltright==false){
      correctright=false;
      run=true;}}

     if(x>=10){ //set limit to # of prompts
     run=false;
     end=true;
     x=0;}
     if(end==true){
     image(introduction,0,0);
     image(restart,800,300);}
     if(end==true && tiltleft==true && tiltright==true){
     start=true;
     end=false;}}
class Animation {
  PImage[]images;
  int imageCount, frame, fallen, x, y;
      
  Animation(String imagePrefix, int count){
  imageCount = count;
  images = new PImage[imageCount];   
  
  for (int i=0; i< imageCount; i++){
  String filename = imagePrefix + nf(i, 1) + ".JPG";
  images[i]=loadImage(filename);}} 
  
   public void run(int x, int y){
  frame = (frame+1) % imageCount;
  image(images[frame], x, y);}}


  public void settings() { size(1440, 800); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "FinalProject" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
